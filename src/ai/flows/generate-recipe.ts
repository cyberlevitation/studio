
'use server';

/**
 * @fileOverview Recipe generation AI agent.
 *
 * - generateRecipe - A function that generates a recipe based on cuisine,
 *   optionally including a specific dish name, ingredients, and restaurant/video links.
 * - GenerateRecipeInput - The input type for the generateRecipe function.
 * - GenerateRecipeOutput - The return type for the generateRecipe function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { findLocalRestaurantsTool } from '@/ai/tools/find-local-restaurants-tool';
import { findVideoTutorialsTool } from '@/ai/tools/find-video-tutorials-tool';
import {
  FindLocalRestaurantsOutputSchema,
  FindVideoTutorialsOutputSchema
} from '@/ai/schemas/shared-tool-schemas';

const GenerateRecipeInputSchema = z.object({
  cuisine: z
    .string()
    .optional()
    .describe('The type of cuisine to generate a recipe for. If not provided, the AI will select a suitable cuisine, with a preference for African cuisines if appropriate for other inputs.'),
  dishName: z
    .string()
    .optional()
    .describe('The specific dish the user wants a recipe for (e.g., "Chicken Parmesan"). If provided, this should be the primary focus.'),
  ingredients: z
    .string()
    .optional()
    .describe('The ingredients that should be included in the recipe.'),
});
export type GenerateRecipeInput = z.infer<typeof GenerateRecipeInputSchema>;

const GenerateRecipeOutputSchema = z.object({
  recipeName: z.string().describe('The name of the recipe. If the user provided a dishName, this should match or be a close variation.'),
  ingredients: z.array(z.string()).describe('A list of ingredients required for the recipe, including quantities if appropriate.'),
  steps: z.array(z.string()).describe('The step-by-step instructions for the recipe. Individual steps may contain Markdown-formatted links to relevant video tutorials if applicable.'),
  restaurantLinks: FindLocalRestaurantsOutputSchema.optional().describe('Links to local restaurants where the meal can be ordered. (Generated by findLocalRestaurantsTool)'),
  videoTutorialLinks: FindVideoTutorialsOutputSchema.optional().describe('Links to video tutorials for the meal. (Generated by findVideoTutorialsTool)'),
});
export type GenerateRecipeOutput = z.infer<typeof GenerateRecipeOutputSchema>;

export async function generateRecipe(input: GenerateRecipeInput): Promise<GenerateRecipeOutput> {
  return generateRecipeFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateRecipePrompt',
  input: {schema: GenerateRecipeInputSchema},
  output: {schema: GenerateRecipeOutputSchema},
  tools: [findLocalRestaurantsTool, findVideoTutorialsTool],
  prompt: `You are a world-class chef, skilled in creating recipes for any cuisine, with a special emphasis on African cuisines for a primarily African audience.

The user will provide:
{{#if cuisine}}- A cuisine: {{{cuisine}}}{{else}}- Potentially no specific cuisine. If no cuisine is specified, you should choose a popular and interesting cuisine for the recipe. **Prioritize African cuisines (e.g., Nigerian, Ethiopian, Moroccan, Senegalese, South African, general African) if the ingredients (if provided) or dish name (if provided) are suitable, or if no other strong indicators are present. If African cuisine isn't a good fit, then select another appropriate popular cuisine.**{{/if}}
{{#if dishName}}- A specific dish name: "{{{dishName}}}"{{/if}}
{{#if ingredients}}- Optionally, a list of ingredients they have: "{{{ingredients}}}" (these are ingredients the user possesses, try to incorporate them if it makes sense for the dish).{{/if}}

{{#if dishName}}
Your primary goal is to generate a recipe for "{{{dishName}}}".
{{#if cuisine}}The recipe should fit the "{{{cuisine}}}" cuisine style. For example, if cuisine is "Italian" and dishName is "Tacos", you should aim for an Italian-inspired taco recipe or clearly state if it's not a good fit and suggest an alternative.
{{else}}
If no cuisine is specified, choose an appropriate cuisine style for "{{{dishName}}}". **Strongly consider if "{{{dishName}}}" is an African dish or could be adapted to an African style. If so, default to an African cuisine.** Otherwise, pick a globally recognized appropriate style.
{{/if}}
If ingredients are provided ({{{ingredients}}}), try to incorporate them naturally into the recipe for "{{{dishName}}}".
The output 'recipeName' should be "{{{dishName}}}" or a very close variation if appropriate (e.g., "Classic {{{dishName}}}"{{#if cuisine}}, or "{{{cuisine}}}-style {{{dishName}}}"{{/if}}).
{{else}}
{{! This is the case where dishName is NOT provided }}
{{#if cuisine}}
Generate a suitable and popular recipe for the selected "{{{cuisine}}}" cuisine.
{{else}}
Generate a suitable and popular recipe. **Since no cuisine was specified, prioritize suggesting a dish from an African cuisine (e.g., Jollof Rice, Tagine, Injera with Doro Wat, Bunny Chow, etc.).** If the provided ingredients (if any) strongly point to a non-African dish, you may select another popular cuisine.
{{/if}}
If ingredients are provided ({{{ingredients}}}), use them to tailor the recipe.
The output 'recipeName' should be the name of the dish you generate.
{{/if}}

You will generate a recipe with a list of necessary ingredients (including quantities) and step-by-step instructions.
List out all ingredients clearly, and then list out each step clearly.

When providing the recipe steps:
If a specific step describes a complex technique (e.g., "deglaze the pan", "julienne vegetables", "create a roux"), and you believe one of the general video tutorials found for the overall dish (available via the 'findVideoTutorialsTool') also clearly demonstrates this *specific technique*, you MAY include a Markdown-formatted link within that step's text to guide the user. For example: "Properly fold the egg whites (see [video on folding techniques](URL_from_tool_result)) into the batter."
Only do this if the video segment is highly relevant to the technique in that step. Do not force links if none of the provided general videos are suitable for a specific technique. Be concise with the link text.

After generating the recipe steps, if the dish (either specified by user or generated by you) seems to be a common dish, please also:
1. Use the 'findLocalRestaurantsTool' to suggest 1-2 local restaurants where the user might be able to order this dish.
   For the location, use "San Francisco, CA". Only use this tool if the dish is something commonly found in restaurants.
2. Use the 'findVideoTutorialsTool' to find 1-2 video tutorials on how to prepare this dish.
   Only use this tool if the dish is something people would typically look up a tutorial for.

If the dish is very obscure, highly customized based on rare ingredients, or if the user's specified dishName and cuisine are a very unusual combination, you may skip finding restaurants or videos.
`,
});

const generateRecipeFlow = ai.defineFlow(
  {
    name: 'generateRecipeFlow',
    inputSchema: GenerateRecipeInputSchema,
    outputSchema: GenerateRecipeOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    // Basic validation to ensure the AI returns something sensible
    if (!output || !output.recipeName || !output.ingredients || output.ingredients.length === 0 || !output.steps || output.steps.length === 0) {
      // If dishName was provided by user, try to use it as a fallback recipeName for a more graceful error message
      const fallbackName = input.dishName || 'the requested dish';
      throw new Error(
        `The AI failed to generate a complete recipe (including ingredients and steps) for ${fallbackName}. It might be an uncommon request or the AI had trouble. Please try a different dish or cuisine.`
      );
    }
    return output!;
  }
);

